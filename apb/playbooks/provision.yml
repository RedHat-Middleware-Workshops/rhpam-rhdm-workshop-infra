- name: rhpam-rhdm-workshopv2-apb playbook to provision the application
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
    openshift_user:
    openshift_password:
    openshift_token:
    openshift_master_url:
    openshift_user_password:
    project_suffix: "-XX"
    github_account: RedHat-Middleware-Workshops
    github_ref: master
    #gogs_dev_user: developer
    #gogs_pwd: openshift
    #gogs_generate_user_format: user%02d
    #gogs_clone_addr_m1: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m1-labs.git"
    #gogs_clone_addr_m2: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m2-labs.git"
    #gogs_clone_addr_m3: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m3-labs.git"
    #gogs_clone_addr_m4: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m4-labs.git"
    #gogs_repo_name: "rhpam-rhdm-workshop-v1-labs"
    #gogs_user_count: 0
    #gogs_user_format: user%d
    #infrasvcs_adm_user: adminuser
    #infrasvcs_adm_pwd: adminpwd
    user_count: 5
    master_url: "kubernetes.default"
    modules: "{{ modules }}"

  roles:
  - role: ansible.kubernetes-modules
    install_python_requirements: no
  - role: ansibleplaybookbundle.asb-modules

  tasks:
  - name: login as super user with token
    shell: "oc login {{ master_url }} --token={{ openshift_token }} --insecure-skip-tls-verify=true"
    when:
      - openshift_token is defined
      - openshift_token is not none
      - openshift_token|trim() != ""
    tags: always

  - name: login as super user with pwd
    shell: "oc login {{ master_url }} -u {{ openshift_user }} -p {{ openshift_password }} --insecure-skip-tls-verify=true"
    when: >
      openshift_token is not defined or
      openshift_token is none or
      openshift_token|trim() == ""
    tags: always

  - name: Extract the app route suffix
    block:
      - name: Create an OpenShift Service
        openshift_raw:
          state: present
          definition:
            apiVersion: v1
            kind: Service
            metadata:
              name: dummy
              namespace: labs-infra
            spec:
              ports:
                - name: dummy-port
                  protocol: TCP
                  port: 8080
                  targetPort: 8080
      - name: Wait for Service to be created
        pause:
          seconds: 10
      - name: Create an OpenShift Route
        shell: oc expose service dummy -n labs-infra
      - name: Get OpenShif Route url
        shell: "oc get route dummy | awk 'FNR > 1 {print $2}'"
        register: oc_get_route_output
      - name: Set App Hostname suffix
        set_fact:
          apps_hostname_suffix: "{{ oc_get_route_output.stdout|regex_replace('^dummy-' + namespace + '\\.(.*)$', '\\1') }}"
      - name: Debug apps hostname suffix
        debug:
          msg: "App hostname suffix: {{ apps_hostname_suffix }}"
      - name: Delete an OpenShift Service
        openshift_raw:
          state: absent
          definition:
            apiVersion: v1
            kind: Service
            metadata:
              name: dummy
              namespace: labs-infra
      - name: Delete an OpenShift Route
        openshift_raw:
          state: absent
          definition:
            apiVersion: v1
            kind: Route
            metadata:
              name: dummy
              namespace: labs-infra

  - name: delete project quota
    shell: "oc delete limitrange --all -n {{ namespace }}"
    ignore_errors: true
    tags: always

# This does not seem to work on OCP 4.2. Also not sure if its actually needed ...
#  - name: disable namespace ownership for router
#    shell: "oc set env dc/router --overwrite ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK=true -n default"
#    when:
#      - openshift_token is defined
#      - openshift_token is not none
#      - openshift_token|trim() != ""
#    tags: always

#  - import_role:
#      name: openshift_sonatype_nexus
#    vars:
#      project_name: "{{ namespace }}"
#      nexus_image_version: 3.12.1
#      nexus_max_memory: 6Gi
#    tags: nexus

 # deploy rhamt-rhsso
 #
# - import_role:
#      name: rhamt
#    vars:
#      OCP_PROJECT: "{{ namespace }}"
#      REQUESTED_CPU: "{{ requested_cpu }}"
#      REQUESTED_MEMORY: "{{ requested_memory }}"
#    tags: rhamt

 # deploy gogs
#  - import_role:
#      name: openshift_gogs
#    vars:
#      project_name: "{{ namespace }}"
#      gogs_route: "gogs-{{ namespace }}.{{ apps_hostname_suffix }}"
#      gogs_image_version: 0.11.34
#      gogs_admin_user: "{{ infrasvcs_adm_user }}"
#      gogs_admin_password: "{{ infrasvcs_adm_pwd }}"
#      gogs_user: "{{ gogs_dev_user }}"
#      gogs_password: "{{ gogs_pwd }}"
#    tags: gogs

#  - name: Create gogs users
#    uri:
#      url: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}/api/v1/admin/users
#      method: POST
#      body: "{'login_name': '{{ item }}', 'username': '{{ item }}', 'email': '{{ item }}@gogs.com', 'password': '{{ gogs_pwd }}'}"
#      body_format: json
#      user: "{{ infrasvcs_adm_user }}"
#      password: "{{ infrasvcs_adm_pwd }}"
#      status_code: 200,201
#      force_basic_auth: true
#    ignore_errors: true
#    with_sequence: start=0 end={{ infrasvcs_gogs_user_count }} format="{{ gogs_user_format }}"
#    when: infrasvcs_gogs_user_count > 0

#  - name: migrate moduel 1 repos for all users
#    uri:
#      url: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}/api/v1/repos/migrate
#      method: POST
#      body: "{'clone_addr': '{{ gogs_clone_addr_m1 }}', 'uid': {{ item|int + 3 }}, 'repo_name': '{{ gogs_repo_name }}' }"
#      body_format: json
#      username: "user{{ item }}"
#      url_username: "user{{ item }}"
#      password: "{{ gogs_pwd }}"
#      status_code: 200,201
#      force_basic_auth: true
#    ignore_errors: true
#    with_sequence: start=0 end={{ infrasvcs_gogs_user_count }}
#    when: infrasvcs_gogs_user_count > 0 and modules is search("m1")

#  - name: migrate moduel 2 repos for all users
#    uri:
#      url: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}/api/v1/repos/migrate
#      method: POST
#      body: "{'clone_addr': '{{ gogs_clone_addr_m2 }}', 'uid': {{ item|int + 3 }}, 'repo_name': '{{ gogs_repo_name }}' }"
#      body_format: json
#      username: "user{{ item }}"
#      url_username: "user{{ item }}"
#      password: "{{ gogs_pwd }}"
#      status_code: 200,201
#      force_basic_auth: true
#    ignore_errors: true
#    with_sequence: start=0 end={{ infrasvcs_gogs_user_count }}
#    when: infrasvcs_gogs_user_count > 0 and modules is search("m2")

#  - name: migrate moduel 3 repos for all users
#    uri:
#      url: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}/api/v1/repos/migrate
#      method: POST
#      body: "{'clone_addr': '{{ gogs_clone_addr_m3 }}', 'uid': {{ item|int + 3 }}, 'repo_name': '{{ gogs_repo_name }}' }"
#      body_format: json
#      username: "user{{ item }}"
#      url_username: "user{{ item }}"
#      password: "{{ gogs_pwd }}"
#      status_code: 200,201
#      force_basic_auth: true
#    ignore_errors: true
#    with_sequence: start=0 end={{ infrasvcs_gogs_user_count }}
#    when: infrasvcs_gogs_user_count > 0 and modules is search("m3")

#  - name: migrate moduel 4 repos for all users
#    uri:
#      url: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}/api/v1/repos/migrate
#      method: POST
#      body: "{'clone_addr': '{{ gogs_clone_addr_m4 }}', 'uid': {{ item|int + 3 }}, 'repo_name': '{{ gogs_repo_name }}' }"
#      body_format: json
#      username: "user{{ item }}"
#      url_username: "user{{ item }}"
#      password: "{{ gogs_pwd }}"
#      status_code: 200,201
#      force_basic_auth: true
#    ignore_errors: true
#    with_sequence: start=0 end={{ infrasvcs_gogs_user_count }}
#    when: infrasvcs_gogs_user_count > 0 and modules is search("m4")

 # deploy guides-che
#  - import_role:
#      name: openshift_workshopper
#      allow_duplicates: true
#    vars:
#      workshopper_name: guides-m1
#      project_name: "{{ namespace }}"
#      workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/cloud-native-workshop-v2m1-guides/{{ github_ref }}"
#      workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/cloud-native-workshop-v2m1-guides/{{ github_ref }}/_cloud-native-workshop-module1.yml"
#      workshopper_env_vars:
#        PROJECT_SUFFIX: "{{ project_suffix }}"
#        COOLSTORE_PROJECT: coolstore{{ project_suffix }}
#        OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
#        ECLIPSE_CHE_URL: http://che-{{ namespace }}.{{ apps_hostname_suffix }}
#        GIT_URL: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}
#        NEXUS_URL: http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
#    when: modules is search("m1")
#    tags: guides

  - import_role:
      name: openshift_workshopper
      allow_duplicates: true
    vars:
      workshopper_name: guides-m1
      project_name: "{{ namespace }}"
      workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m1-guides/{{ github_ref }}"
      workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m1-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module1.yml"
      workshopper_env_vars:
        PROJECT_SUFFIX: "{{ project_suffix }}"
        #COOLSTORE_PROJECT: coolstore{{ project_suffix }}
        OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
        #ECLIPSE_CHE_URL: http://che-{{ namespace }}.{{ apps_hostname_suffix }}
        #GIT_URL: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}
        NEXUS_URL: http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
    when: modules is search("m1")
    tags: guides

  - import_role:
      name: openshift_workshopper
      allow_duplicates: true
    vars:
      workshopper_name: guides-m2
      project_name: "{{ namespace }}"
      workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m2-guides/{{ github_ref }}"
      workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m2-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module2.yml"
      workshopper_env_vars:
        PROJECT_SUFFIX: "{{ project_suffix }}"
        #COOLSTORE_PROJECT: coolstore{{ project_suffix }}
        OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
        #ECLIPSE_CHE_URL: http://che-{{ namespace }}.{{ apps_hostname_suffix }}
        #GIT_URL: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}
        NEXUS_URL: http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
    when: modules is search("m2")
    tags: guides

  - import_role:
      name: openshift_workshopper
      allow_duplicates: true
    vars:
      workshopper_name: guides-m3
      project_name: "{{ namespace }}"
      workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m3-guides/{{ github_ref }}"
      workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m3-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module3.yml"
      workshopper_env_vars:
        PROJECT_SUFFIX: "{{ project_suffix }}"
        #COOLSTORE_PROJECT: coolstore{{ project_suffix }}
        OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
        #ECLIPSE_CHE_URL: http://che-{{ namespace }}.{{ apps_hostname_suffix }}
        #GIT_URL: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}
        NEXUS_URL: http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
    when: modules is search("m3")
    tags: guides

  - import_role:
      name: openshift_workshopper
      allow_duplicates: true
    vars:
      workshopper_name: guides-m4
      project_name: "{{ namespace }}"
      workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m4-guides/{{ github_ref }}"
      workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m4-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module4.yml"
      workshopper_env_vars:
        PROJECT_SUFFIX: "{{ project_suffix }}"
        #COOLSTORE_PROJECT: coolstore{{ project_suffix }}
        OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
        #ECLIPSE_CHE_URL: http://che-{{ namespace }}.{{ apps_hostname_suffix }}
        #GIT_URL: http://gogs-{{ namespace }}.{{ apps_hostname_suffix }}
        NEXUS_URL: http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
    when: modules is search("m4")
    tags: guides

  # install openjdk imagestream
  - name: get openjdk image stream
    shell: "oc get is java -n openshift"
    register: java_imagestream_result
    ignore_errors: true
    tags: jdk

  - name: install java image stream
    shell: "oc apply -n openshift -f https://raw.githubusercontent.com/jboss-openshift/application-templates/master/openjdk/openjdk18-image-stream.json"
    when: java_imagestream_result is failed
    tags: jdk

  # install RHPAM Image Streams
  - name: Check if PAM ImageStreams exists
    shell: oc get is/rhpam-businesscentral-rhel8 -n openshift
    register: rhpam_is_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM ImageStreams into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.8.0.GA/rhpam78-image-streams.yaml  -n openshift"
    when: rhpam_is_exists_result is failed
    ignore_errors: true
    tags: rhpam

  - name: Check if RHPAM Authoring Template exists
    shell: oc get template/rhpam78-authoring -n openshift
    register: rhpam_template_authoring_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM Authoring Template into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.8.0.GA/templates/rhpam78-authoring.yaml -n openshift"
    when: rhpam_template_authoring_exists_result is failed
    ignore_errors: true
    tags: rhpam

  - name: Check if RHPAM Trial Template exists
    shell: oc get template/rhpam78-trial-ephemeral -n openshift
    register: rhpam_template_trial_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM Trial Ephemeral Template into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.8.0.GA/templates/rhpam78-trial-ephemeral.yaml -n openshift"
    when: rhpam_template_trial_exists_result is failed
    ignore_errors: true
    tags: rhpam

  - name: Import Create React App template
    shell: "oc create -f https://raw.githubusercontent.com/DuncanDoyle/reactjs-openshift/master/create-react-app-openshift-template.yaml -n openshift"
    ignore_errors: true
    tags: rhpam


# Create database for reporting module
  - include_role:
      name: rhpam_reporting_database
    vars:
      OCP_PROJECT: '{{namespace}}'

# Create user projects
  - include_role:
      name: rhpam_project
    vars:
      USER_NUMBER: '{{item}}'
      OCP_PROJECT: 'rhpam-user{{item}}'
    with_sequence: start=1 end={{user_count}}

#  - include_tasks: ./rhpam_project.yml
#    vars:
#      USER_NUMBER: '{{item}}'
#      OCP_PROJECT: 'rhpam-user{{item}}'
#    with_sequence: start=1 end={{user_count}}

  - include_role:
      name: ansible_openshift_rhpam
    vars:
      OCP_PROJECT: 'rhpam-user{{item}}'
      RHPAM_VERSION_TAG: 7.8.x
      RHPAM_VERSION_ID: 77
    with_sequence: start=1 end={{user_count}}

  - include_role:
      name: rhpam_bc
    vars:
      OCP_PROJECT: 'rhpam-user{{item}}'
    with_sequence: start=1 end={{user_count}}

  - include_role:
      name: rhpam_bc_cm_showcase
    vars:
      OCP_PROJECT: 'rhpam-user{{item}}'
    with_sequence: start=1 end={{user_count}}

  - include_role:
      name: rhpam_ks
    vars:
      OCP_PROJECT: 'rhpam-user{{item}}'
    with_sequence: start=1 end={{user_count}}

# Not needed when using the Trial-Ephemeral environment, as that already has CORS configured.
#  - include_role:
#      name: rhpam_ks_cors
#    vars:
#      OCP_PROJECT: 'rhpam-user{{item}}'
#    with_sequence: start=1 end={{user_count}}

  - include_tasks: ./rhpam_decision-test-app.yml
    vars:
      OCP_PROJECT: 'rhpam-user{{item}}'
    with_sequence: start=1 end={{user_count}}
